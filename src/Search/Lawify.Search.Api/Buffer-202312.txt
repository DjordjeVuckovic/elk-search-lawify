{"Timestamp":"2023-12-19T17:23:09.3945466Z","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN00MSLSOBPG:00000001","RequestPath":"/","ConnectionId":"0HN00MSLSOBPG","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-19T17:23:35.0885751Z","Level":"Error","MessageTemplate":"Not working!","RenderedMessage":"Not working!","Properties":{"SourceContext":"Lawify.Search.Api.Features.SerbianLawsSearch.Search.LawSearchEndpoint","RequestId":"0HN00MSLSOBPH:00000003","RequestPath":"/api/v1/search-laws","ConnectionId":"0HN00MSLSOBPH","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T18:27:12.2569673Z","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","RenderedMessage":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Failure to infer one or more parameters.\r\nBelow is the list of parameters that we found: \r\n\r\nParameter           | Source                        \r\n---------------------------------------------------------------------------------\r\ncommand             | Body (Inferred)\r\nsender              | UNKNOWN        \r\n\r\n\r\nDid you mean to register the \"UNKNOWN\" parameters as a Service?\r\n\r\n\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Mvc.ApiExplorer.EndpointMetadataApiDescriptionProvider.OnProvidersExecuting(ApiDescriptionProviderContext context)\r\n   at Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider.GetCollection(ActionDescriptorCollection actionDescriptors)\r\n   at Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider.get_ApiDescriptionGroups()\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN02A9PAPS83:00000002","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN02A9PAPS83","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T18:27:45.5496489Z","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","RenderedMessage":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Failure to infer one or more parameters.\r\nBelow is the list of parameters that we found: \r\n\r\nParameter           | Source                        \r\n---------------------------------------------------------------------------------\r\nsender              | Body (Inferred)\r\ncommand             | UNKNOWN        \r\n\r\n\r\nDid you mean to register the \"UNKNOWN\" parameters as a Service?\r\n\r\n\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Mvc.ApiExplorer.EndpointMetadataApiDescriptionProvider.OnProvidersExecuting(ApiDescriptionProviderContext context)\r\n   at Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider.GetCollection(ActionDescriptorCollection actionDescriptors)\r\n   at Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider.get_ApiDescriptionGroups()\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN02AA3CEU86:00000002","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN02AA3CEU86","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T18:28:10.7493007Z","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","RenderedMessage":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Failure to infer one or more parameters.\r\nBelow is the list of parameters that we found: \r\n\r\nParameter           | Source                        \r\n---------------------------------------------------------------------------------\r\nsender              | Body (Inferred)\r\ncommand             | UNKNOWN        \r\n\r\n\r\nDid you mean to register the \"UNKNOWN\" parameters as a Service?\r\n\r\n\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Mvc.ApiExplorer.EndpointMetadataApiDescriptionProvider.OnProvidersExecuting(ApiDescriptionProviderContext context)\r\n   at Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider.GetCollection(ActionDescriptorCollection actionDescriptors)\r\n   at Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroupCollectionProvider.get_ApiDescriptionGroups()\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN02AAATBER8:00000002","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN02AAATBER8","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T18:45:54.1565368Z","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN02ADEOOG4L:00000001","RequestPath":"/api/v1/contracts","ConnectionId":"0HN02ADEOOG4L","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T18:45:54.9748031Z","Level":"Error","MessageTemplate":"Unhandled error {err}","RenderedMessage":"Unhandled error \"You attempted to access the Error property for a successful result. A successful result has no Error.\"","Properties":{"err":"You attempted to access the Error property for a successful result. A successful result has no Error.","SourceContext":"Lawify.Common.Middlewares.ExceptionMiddleware","RequestId":"0HN02ADEOOG4L:00000001","RequestPath":"/api/v1/contracts","ConnectionId":"0HN02ADEOOG4L","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T18:47:09.9708535Z","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN02AKTBDG8B:00000001","RequestPath":"/api/v1/contracts","ConnectionId":"0HN02AKTBDG8B","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T18:48:18.0303523Z","Level":"Error","MessageTemplate":"Unhandled error {err}","RenderedMessage":"Unhandled error \"You attempted to access the Error property for a successful result. A successful result has no Error.\"","Properties":{"err":"You attempted to access the Error property for a successful result. A successful result has no Error.","SourceContext":"Lawify.Common.Middlewares.ExceptionMiddleware","RequestId":"0HN02AKTBDG8B:00000001","RequestPath":"/api/v1/contracts","ConnectionId":"0HN02AKTBDG8B","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T18:49:56.1495233Z","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN02AME3OQUV:00000003","RequestPath":"/api/v1/contracts","ConnectionId":"0HN02AME3OQUV","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T18:56:49.6597020Z","Level":"Error","MessageTemplate":"Unhandled error {err}","RenderedMessage":"Unhandled error \"You attempted to access the Error property for a successful result. A successful result has no Error.\"","Properties":{"err":"You attempted to access the Error property for a successful result. A successful result has no Error.","SourceContext":"Lawify.Common.Middlewares.ExceptionMiddleware","RequestId":"0HN02AME3OQUV:00000003","RequestPath":"/api/v1/contracts","ConnectionId":"0HN02AME3OQUV","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T19:08:41.2568496Z","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN02B0S9TBDU:00000001","RequestPath":"/api/v1/contracts","ConnectionId":"0HN02B0S9TBDU","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T19:10:11.7764295Z","Level":"Error","MessageTemplate":"Unhandled error {err}","RenderedMessage":"Unhandled error \"Failed to read parameter \\\"Command command\\\" from the request body as JSON.\"","Properties":{"err":"Failed to read parameter \"Command command\" from the request body as JSON.","SourceContext":"Lawify.Common.Middlewares.ExceptionMiddleware","RequestId":"0HN02B0S9TBDV:00000001","RequestPath":"/api/v1/contracts","ConnectionId":"0HN02B0S9TBDV","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T19:32:07.7664272Z","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN02BDH27SDC:00000003","RequestPath":"/api/v1/serbian-contracts/Roba","ConnectionId":"0HN02BDH27SDC","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T19:32:08.4379060Z","Level":"Error","MessageTemplate":"Unhandled error {err}","RenderedMessage":"Unhandled error \"Object reference not set to an instance of an object.\"","Properties":{"err":"Object reference not set to an instance of an object.","SourceContext":"Lawify.Common.Middlewares.ExceptionMiddleware","RequestId":"0HN02BDH27SDC:00000003","RequestPath":"/api/v1/serbian-contracts/Roba","ConnectionId":"0HN02BDH27SDC","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T19:37:28.3019173Z","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN02BGHPV6GA:00000001","RequestPath":"/api/v1/serbian-contracts/Roba","ConnectionId":"0HN02BGHPV6GA","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T19:49:54.0764809Z","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN02BNT8A0C9:00000001","RequestPath":"/api/v1/serbian-contracts/Roba","ConnectionId":"0HN02BNT8A0C9","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T19:49:54.1861229Z","Level":"Error","MessageTemplate":"Unhandled error {err}","RenderedMessage":"Unhandled error \"Object reference not set to an instance of an object.\"","Properties":{"err":"Object reference not set to an instance of an object.","SourceContext":"Lawify.Common.Middlewares.ExceptionMiddleware","RequestId":"0HN02BNT8A0C9:00000001","RequestPath":"/api/v1/serbian-contracts/Roba","ConnectionId":"0HN02BNT8A0C9","environment":"development","serviceName":"search-api"}}
{"Timestamp":"2023-12-21T19:52:47.2046101Z","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","RenderedMessage":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HN02BP66R4AK:00000001","RequestPath":"/api/v1/serbian-contracts/Roba","ConnectionId":"0HN02BP66R4AK","environment":"development","serviceName":"search-api"}}
